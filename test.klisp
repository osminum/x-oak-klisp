; behavior test suite using the "test" library

(run-tests
  (deftest 'basic addition' (+ 2 2) 4)
  (deftest 'variadic addition' (+ 1 2 3 4 5) 15)
  (deftest 'basic subtraction' (- 10 5) 5)
  (deftest 'variadic subtraction' (- 100 50 10 2) 38)
  (deftest 'basic multiplication' (* 5 8) 40)
  (deftest 'variadic multiplication' (* 2 3 5 8) 240)

  ; iter
  (deftest 'base-iterator list'
    (base-iterator (list 1 2 3))
    ())
  (deftest 'base-iterator string'
    (base-iterator 'hello')
    '')

  (deftest 'first empty list'
    (first ())
    ())
  (deftest 'first list'
    (first (list 10 20 30))
    10)
  (deftest 'first empty string'
    (first '')
    '')
  (deftest 'first string'
    (first 'Lisp')
    'L')

  (deftest 'rest empty list'
    (rest ())
    ())
  (deftest 'rest list'
    (rest (list 10 20 30))
    (list 20 30))
  (deftest 'rest empty string'
    (rest '')
    '')
  (deftest 'rest string'
    (rest 'Lisp')
    'isp')

  (deftest 'conj onto string'
    (conj 'L' 'isp')
    'Lisp')
  (deftest 'conj onto list'
    (conj 10 (list 20 30 40))
    (list 10 20 30 40))

  (deftest 'nth of string'
    (nth 'Apple' 2)
    'p')
  (deftest 'nth of string, too low'
    (nth 'Apple' -2)
    '')
  (deftest 'nth of string, too high'
    (nth 'Apple' 10)
    '')
  (deftest 'nth of list'
    (nth (nat 5) 2)
    3)
  (deftest 'nth of list, too low'
    (nth (nat 5) -2)
    ())
  (deftest 'nth of list, too high'
    (nth (nat 5) 10)
    ())

  (deftest 'nth! of string'
    (let (s 'Apple')
      (do
        (nth! s 2 'X')
        s))
    'ApXle')

  ; encoding
  (deftest 'bytes of empty string'
    (bytes '')
    (list))
  (deftest 'bytes of string'
    (bytes 'Hello')
    (list 72 101 108 108 111))

  (deftest 'int->hex'
    (-> (list 0 3 10 64 100 255 2022)
        (map int->hex))
    (list '0' '3' 'a' '40' '64' 'ff' '7e6'))
  (deftest 'hex->int'
    (-> (list '0' '3' 'a' '40' '64' 'ff' '7e6')
        (map hex->int))
    (list 0 3 10 64 100 255 2022))
  (deftest 'int/hex round-trips'
    (-> (range 2 1000 31)
        (map int->hex)
        (map hex->int))
    (range 2 1000 31)))

